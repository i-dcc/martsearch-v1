({
  url:                  '/htgt/biomart/martservice',
  name:                 'Gene Targeting Constructs',
  description:          '',
  datasetConfigVersion: 0.6,
  dataset_name:         'HTGT_TARG',
  
  importables:
    [
      { name: 'ensembl_gene_id' },
      { name: 'gene_symbol' },
      { name: 'escell_clone_name' }
    ],
  
  exportables:
    [
      { name: 'ensembl_gene_id' },
      { name: 'gene_symbol' },
      { name: 'escell_clone_name' }
    ],
  
  filters:
    [
      { name: 'gene_symbol',            display: 'Gene Symbol',                         enabled: true },
      { name: 'gene_name',              display: 'Gene Name',                           enabled: false },
      { name: 'mgi_accession_id',       display: 'MGI Accession ID',                    enabled: false },
      { name: 'ensembl_gene_id',        display: 'Ensembl Gene ID',                     enabled: false },
      { name: 'vega_gene_id',           display: 'Vega Gene ID',                        enabled: false },
      { name: 'entrez_gene_id',         display: 'Entrez Gene ID',                      enabled: false },
      
      { name: 'pcs_distribute',         display: 'Intermediate Vector Distribute',      enabled: false },
      { name: 'targvec_distribute',     display: 'Targeting Vector Distribute',         enabled: false },
      { name: 'epd_distribute',         display: 'ES Cell Distribute',                  enabled: false,  default: '1' }
    ],
  
  attributes:
    [
      { name: 'is_eucomm',              display: 'EUCOMM',                              enabled: true },
      { name: 'is_komp_csd',            display: 'KOMP',                                enabled: true },
      { name: 'is_mgp',                 display: 'MGP',                                 enabled: false },
      { name: 'is_norcomm',             display: 'NorCOMM',                             enabled: false },
      { name: 'is_komp_regeneron',      display: 'Regeneron',                           enabled: false },
      
      { name: 'gene_symbol',            display: 'Gene Symbol',                         enabled: false },
      { name: 'gene_name',              display: 'Gene Name',                           enabled: false },
      { name: 'mgi_accession_id',       display: 'MGI Accession ID',                    enabled: false },
      { name: 'ensembl_gene_id',        display: 'Ensembl Gene ID',                     enabled: true },
      { name: 'vega_gene_id',           display: 'Vega Gene ID',                        enabled: false },
      { name: 'entrez_gene_id',         display: 'Entrez Gene ID',                      enabled: false },
      
      { name: 'status',                 display: 'Status',                              enabled: true },
      { name: 'is_latest_for_gene',     display: 'Most Advanced For Gene',              enabled: false },
      
      { name: 'design_plate_name',      display: 'Design Plate',                        enabled: false },
      { name: 'design_well_name',       display: 'Design Well',                         enabled: false },
      { name: 'design_id',              display: 'Design ID',                           enabled: false },
      { name: 'bac',                    display: 'Bac Library',                         enabled: false },
      
      { name: 'intvec_plate_name',      display: 'Intermediate Vector Plate',           enabled: false },
      { name: 'intvec_well_name',       display: 'Intermediate Vector Well',            enabled: false },
      { name: 'intvec_pass_level',      display: 'Intermediate Vector QC',              enabled: false },
      { name: 'pc_qctest_result_id',    display: 'Intermediate Vector QC ID (link)',    enabled: false },
      { name: 'pcs_distribute',         display: 'Intermediate Vector Distribute',      enabled: false },
      
      { name: 'targvec_plate_name',     display: 'Targeting Vector Plate',              enabled: false },
      { name: 'targvec_well_name',      display: 'Targeting Vector Well',               enabled: false },
      { name: 'backbone',               display: 'Backbone',                            enabled: false },
      { name: 'cassette',               display: 'Cassette',                            enabled: false },
      { name: 'targvec_pass_level',     display: 'Targeting Vector QC',                 enabled: false },
      { name: 'pg_qctest_result_id',    display: 'Targeting Vector QC ID (link)',       enabled: false },
      { name: 'targvec_distribute',     display: 'Targeting Vector Distribute',         enabled: false },
      
      { name: 'allele_name',            display: 'Allele Name',                         enabled: true },
      { name: 'escell_clone_name',      display: 'ES Cell Clone Name',                  enabled: true },
      { name: 'es_cell_line',           display: 'ES Cell Line',                        enabled: false },
      { name: 'colonies_picked',        display: 'Colonies Picked',                     enabled: false },
      { name: 'total_colonies',         display: 'Total Colonies',                      enabled: false },
      { name: 'epd_pass_level',         display: 'ES Cell QC',                          enabled: false },
      { name: 'epd_qctest_result_id',   display: 'ES Cell QC ID (link)',                enabled: false },
      { name: 'epd_distribute',         display: 'ES Cell Distribute',                  enabled: false },
    ],
  
  template: new String(
    '<strong>{ $T.source.name }</strong>'+
    '<table>'+
      '<thead>'+
        '<tr>'+
        '{#foreach $T.source.attributes as attribute}'+
          '{#if $T.attribute.enabled}'+
          '<th>{$T.attribute.display}</th>'+
          '{#/if}'+
        '{#/for}'+
        '</tr>'+
      '</thead>'+
      '<tbody>'+
        '{#foreach $T.results as result_array}'+
          '<tr>'+
          '{#foreach $T.result_array as result}'+
              '<td>{$T.result}</td>'+
          '{#/for}'+
          '</tr>'+
        '{#/for}'+
      '</tbody>'+
    '</table>'
  )
})