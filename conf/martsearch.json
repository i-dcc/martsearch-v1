{
  
  // Debugging environment?
  debug_mode: true,
  
  // Configure the main index
  index_conf: {
    url:            "/solr",
    primary_field:  "marker_symbol_str",
    docs_per_page:  10
  },
  
  // Configure browsable content
  browsable_content: [
    {
      index_field:  "marker_symbol_str",
      display_name: "Marker Symbol",
      exact_search: false,
      options: [
        "A","B","C","D","E","F","G","H","I","J",
        "K","L","M","N","O","P","Q","R","S","T",
        "U","V","W","X","Y","Z",
        ["0-9","(0* OR 1* OR 2* OR 3* OR 4* OR 5* OR 6* OR 7* OR 8* OR 9*)"]
      ]
    },
    {
      index_field:  "chromosome",
      display_name: "Chromosome",
      exact_search: true,
      options: [
        "1","2","3","4","5","6","7","8","9","10",
        "11","12","13","14","15","16","17","18","19",
        "X","Y"
      ]
    }
  ],
  
  // Settings for the test suite
  test_conf: {
    safe_search: "cbx1",
    not_so_safe_search: "chromosome:1"
  },
  
  // Pre-search hook
  pre_search_hook: undefined,
  
  // Post-search hook
  post_search_hook: function () {
    // Fill in ...
    //  - the phenotyping Allele name by looking it up via the kermits data
    //  - the phenotyping cassette type by looking it up via the htgt_targ data
    jQuery.each( ms.current_results, function ( marker_symbol, resultset ) {
      if ( resultset["phenotyping"] ) {
        
        for (var pheno_index=0; pheno_index < resultset["phenotyping"]["results"].length; pheno_index++) {
          var pheno_result = resultset["phenotyping"]["results"][pheno_index];
          
          var escell_clone_name = pheno_result["escell_clone_name"] ? pheno_result["escell_clone_name"] : "-";
          var allele_name       = "-";
          var allele_type       = "-";
          var cassette_type     = "-";
          
          if ( escell_clone_name === "-" ) {
            escell_clone_name = pheno_result["marker_symbol"] + "-" + pheno_result["colony_prefix"];
          }
          
          for (var i=0; i < resultset["sanger_mice"]["results"].length; i++) {
            var mice_result = resultset["sanger_mice"]["results"][i];
            if ( mice_result["escell_clone_name"] === escell_clone_name ) {
              allele_name = mice_result["allele_name"];
              allele_type = mice_result["allele_type"];
            }
          }
          
          jQuery.each( resultset["sanger_vectors_es_cells"]["results"], function ( cells_index, cells_results ) {
            for (var j=0; j < cells_results["escells"].length; j++) {
              cell_info = cells_results["escells"][j];
              if ( cell_info["escell_clone_name"] === escell_clone_name ) {
                if ( cells_results["cassette"].match(/_P/) ) { cassette_type = "Promotor Driven" }
                else                                         { cassette_type = "Promotorless" }
              }
            }
          });
          
          jQuery("#"+resultset["phenotyping"]["content_id"]+"_"+pheno_index).find("td.allele_name").html(allele_name);
          jQuery("#"+resultset["phenotyping"]["content_id"]+"_"+pheno_index).find("td.allele_type").html(allele_type);
          jQuery("#"+resultset["phenotyping"]["content_id"]+"_"+pheno_index).find("td.escell_clone_name").html(escell_clone_name);
          jQuery("#"+resultset["phenotyping"]["content_id"]+"_"+pheno_index).find("td.cassette_type").html(cassette_type);
          
        }
      }
    });
  }
}